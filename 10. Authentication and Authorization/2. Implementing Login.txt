When the user logs in, you should send a post request to an API endpoint to validate their credentials. 
If the credentials are valid, we should get a json web token, and store it in the local storage.
Its better to return a boolean instead of a response object.


COMPLETE CODE:

auth.service.ts

import { map } from "rxjs/operators";
import { Injectable } from "@angular/core";
import { Http } from "@angular/http";

@Injectable()
export class AuthService {
  constructor(private http: Http) {}

  login(credentials) {
    return this.http
      .post("/api/authenticate", JSON.stringify(credentials))
      .pipe(
        map((response: any) => {
          // console.log(response);
          //NOTE: could be refactored. Instead of storing the response to a variable, use response instead.
          let result = response;
          if (result && result._body.token) {
            localStorage.setItem("token", result._body.token);
            return true;
          }
          return false;
        })
      );
  }

  logout() {}

  isLoggedIn() {
    return false;
  }
}

-------------------------------------------------------

login.component.html

NOTE: the value of f.value are email and password.
<form class="form-signin" #f="ngForm" (ngSubmit)="signIn(f.value)">
  <h2 class="form-signin-heading">Please sign in</h2>

  NOTE: this will be shown if you have an invalid login 
  <div *ngIf="invalidLogin" class="alert alert-danger">
    Invalid username and/or password.
  </div>

  <label for="inputEmail" class="sr-only">Email address</label>
  <input
    type="email"
    id="inputEmail"
    name="email"
    ngModel
    class="form-control"
    placeholder="Email address"
    required
    autofocus
  />

  <label for="inputPassword" class="sr-only">Password</label>
  <input
    type="password"
    id="inputPassword"
    name="password"
    ngModel
    class="form-control"
    placeholder="Password"
    required
  />

  <button class="btn btn-lg btn-primary btn-block" type="submit">
    Sign in
  </button>
</form>

-------------------------------------------------------

login.component.ts

import { AuthService } from "./../services/auth.service";
import { Component } from "@angular/core";
import { Router } from "@angular/router";

@Component({
  selector: "login",
  templateUrl: "./login.component.html",
  styleUrls: ["./login.component.css"],
})
export class LoginComponent {
  invalidLogin: boolean = false;

  constructor(private router: Router, private authService: AuthService) {}

  signIn(credentials) {
    this.authService.login(credentials).subscribe((result) => {
      if (result) this.router.navigate(["/"]);
      else this.invalidLogin = true;
    });
  }
}
