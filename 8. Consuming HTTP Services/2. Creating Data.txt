There are 3 parameters in the post request, the url, body , and options.
e.g.
post(url: string, body: any, options?: RequestOptionsArgs) : Observable<Response>


posts.component:

NOTE: we have used template reference variable here.
<input
  (keyup.enter)="createPost(title)"
  #title
  type="text"
  class="form-control"
/>

<ul>
  <li *ngFor="let post of posts">
    {{ post.title }}
  </li>
</ul>

----------------------------------------------------------

post.component.ts:

import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-posts',
  templateUrl: './posts.component.html',
  styleUrls: ['./posts.component.css'],
})
export class PostsComponent implements OnInit {
  posts: any;
  private url = 'https://jsonplaceholder.typicode.com/posts';

  // NOTE: http is only available in the constructor.
  // NOTE: in order for you to use the http object to other methods, you need to prefix it with private so it will be a field in the class.
  constructor(private http: HttpClient) {
    http.get(this.url).subscribe((response) => {
      console.log(response);
      this.posts = response;
    });
  }

  // NOTE: title is not an object of string, it is an HTMLInputElement.
  // NOTE: we need to annotate it to avoid confusion for other people reading the code.
  createPost(input: HTMLInputElement) {
    let post: any = { title: input.value };
    input.value = '';

    // NOTE: instead of using get, we have used post to create our data
    // NOTE: this will send an http post request to the server.
    this.http
      .post(this.url, JSON.stringify(post))
      .subscribe((response: any) => {
        post.id = response.id;
        this.posts.unshift(post);
      });
  }

  ngOnInit() {}
}

